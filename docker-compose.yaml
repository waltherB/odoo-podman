version: "3.8"
services:
  db:
    image: docker.io/postgres:15
    container_name: odoo-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "${EXPOSED_PG_PORT}:5432"
    networks:
      - odoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  odoo:
    build: .
    container_name: odoo-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database connection
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}

      # Odoo configuration
      - ODOO_ADMIN_PASSWORD=${ODOO_MASTER_PASSWORD}

      # Force TCP connection
      - PGHOST=db
      - PGPORT=5432

      # Additional optimizations
      - UNACCENT=true
      - DB_TEMPLATE=template0
    ports:
      - "${EXPOSED_ODOO_PORT}:8069"
    volumes:
      - ./addons:/mnt/extra-addons
      - ./odoo.conf.template:/etc/odoo/odoo.conf.template
      - ./entrypoint.sh:/entrypoint.sh
      # Uncomment the next line to develop Odoo core (mount source):
      # - ./odoo-src:/usr/lib/python3/site-packages/odoo
    networks:
      - odoo-network
    entrypoint: ["/entrypoint.sh"]
    command: ["odoo", "-c", "/etc/odoo/odoo.conf"]

networks:
  odoo-network:
    driver: bridge
